// Плагины:
// - java: для работы с проектами на Java
// - com.github.ben-manes.versions: для проверки обновлений зависимостей
plugins {
    id 'java'
    id 'com.github.ben-manes.versions' version '0.51.0' // Обновленная версия плагина для проверки зависимостей
    }

// Основная информация о проекте
group = 'com.example'
version = '1.0-SNAPSHOT'

// Репозитории для загрузки зависимостей
repositories {
    mavenCentral() // Основной репозиторий для зависимостей
}

// Зависимости проекта
dependencies {
    // Selenium: для автоматизации браузеров
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.27.0' // Обновленная версия
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.4.0'
    // Cucumber: для BDD тестов
    implementation group: 'io.cucumber', name: 'cucumber-junit', version: '7.20.1' // Обновленная версия

    // Selenide: упрощение работы с UI тестами
    implementation group: 'com.codeborne', name: 'selenide', version: '7.6.1' // Обновленная версия

    // WebDriverManager: автоматическое управление браузерными драйверами
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.9.2'

    // Lombok: упрощение кода с аннотациями (геттеры, сеттеры и др.)
    compileOnly 'org.projectlombok:lombok:1.18.36' // Обновленная версия
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'

    // TestNG: для написания и выполнения тестов
    implementation group: 'org.testng', name: 'testng', version: '7.10.2'

    // Apache HttpClient: для работы с REST API
    implementation group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.14'

    // RestAssured: для тестирования REST API
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '5.5.0'

    // Logback: для логирования
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.12' // Обновленная версия

    // Allure: для генерации отчетов
    testImplementation 'io.qameta.allure:allure-testng:2.29.1' // Обновленная версия
    testImplementation 'io.qameta.allure:allure-java-commons:2.29.1' // Обновленная версия
}

// Конфигурация задачи для TestNG
test {
    useTestNG() {
        suites 'src/test/resources/regression.xml'
    }
}

// Пример дополнительной функции для регистрации тестовых задач
// Функция позволяет регистрировать задачи для разных наборов тестов
// Пример: smoke, regression и т.д.
/*
def registerTask(String taskName, String suitePath) {
    tasks.register(taskName, Test) {
        useTestNG {
            suites suitePath // Путь к suite файлу TestNG
        }
        if (project.hasProperty('browser')) {
            systemProperty 'browser', "${browser}" // Передача параметра browser
        }
    }
}

// Регистрация тестовых задач
registerTask('smoke', 'src/test/resources/smoke.xml')       // Smoke тесты
registerTask('regression', 'src/test/resources/regression.xml') // Regression тесты
registerTask('accept', 'src/test/resources/accept.xml')     // Acceptance тесты
registerTask('login', 'src/test/resources/login.xml')       // Login тесты
*/

// Команда для проверки устаревших зависимостей:
// gradle dependencyUpdates
// Сгенерированный отчет покажет доступные обновления

//gradle clean test -Dtestng.suiteXmlFiles=src/test/resources/registrationTests.xml


// Пример использования команд:
// gradle allureReport — Генерация отчета Allure
// gradle allureServe  — Просмотр отчета Allure
// gradle smoke        — Запуск Smoke тестов
// gradle regression   — Запуск Regression тестов
// gradle accept       — Запуск Acceptance тестов
// gradle login        — Запуск Login тестов

